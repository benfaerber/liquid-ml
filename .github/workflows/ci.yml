name: CI

on:
  push:
    branches: [ main, add-tests ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ocaml-compiler:
          - 4.14.x
          - 5.2.x

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up OCaml
      uses: ocaml/setup-ocaml@v3
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}
        dune-cache: true

    - name: Install dependencies
      run: |
        opam install . --deps-only --with-test --yes
        opam install bisect_ppx --yes

    - name: Build
      run: opam exec -- dune build

    - name: Build and run tests with coverage
      if: matrix.ocaml-compiler == '5.2.x'
      run: |
        mkdir -p _coverage
        export BISECT_FILE=_coverage/bisect
        export BISECT_ENABLE=yes
        opam exec -- dune clean
        opam exec -- dune build --instrument-with bisect_ppx
        opam exec -- dune runtest --instrument-with bisect_ppx --force
      continue-on-error: true

    - name: Run tests without coverage
      if: matrix.ocaml-compiler != '5.2.x'
      run: |
        opam exec -- dune runtest
      continue-on-error: true

    - name: Check coverage files
      if: matrix.ocaml-compiler == '5.2.x'
      run: |
        echo "Checking for coverage files..."
        find . -name "*.coverage" -o -name "bisect*.coverage" || echo "No coverage files found"
        ls -la _coverage/ || echo "_coverage directory is empty or doesn't exist"
        echo "Checking _build directory..."
        find _build -name "*.coverage" 2>/dev/null || echo "No coverage files in _build"

    - name: Generate coverage report
      if: matrix.ocaml-compiler == '5.2.x'
      run: |
        opam exec -- bisect-ppx-report html --coverage-path _coverage
        opam exec -- bisect-ppx-report summary --coverage-path _coverage
        opam exec -- bisect-ppx-report cobertura coverage.xml --coverage-path _coverage

    - name: Upload coverage to Codecov
      if: matrix.ocaml-compiler == '5.2.x'
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
